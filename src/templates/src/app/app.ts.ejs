import * as dotenv from 'dotenv'
import * as express from 'express'
import Mongoose from 'mongoose'
import Cors from 'cors'

import 'express-async-errors'

import DatabaseConfig from '../config/database'
import Routes from './routes'
import AppError from './errors/AppError'

dotenv.config()

export default class App {
  public server: express.Express;

  constructor () {
    this.server = express()
  }

  private database () {
    Mongoose.connect(DatabaseConfig.uri, {
      useCreateIndex: true,
      useNewUrlParser: true,
      useFindAndModify: false,
      useUnifiedTopology: true
    })
  }

  private middwares () {
    this.server.use(Cors())
    this.server.use(express.json())
    this.server.use(express.urlencoded({ extended: true }))
  }

  private routes () {
    this.server.use(Routes)
  }

  private exception () {
    this.server.use(async (err: Error, request: express.Request, response: express.Response, _: express.NextFunction) => {
      if (err instanceof AppError) {
        return response.status(err.statusCode).json(err.error)
      }

      return response.status(500).json({
        status: 'error',
        message: 'Internal Server Error'
      })
    })
  }
}
