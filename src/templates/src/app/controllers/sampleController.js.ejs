<% if (props.sucrase) { -%>
import Sample from '../models/SampleModel';
import SampleValidator from '../validators/SampleValidator';
<% } else { -%>
const Sample = require('../models/SampleModel');
const SampleValidator = require('../validators/SampleValidator');
<% } -%>

class SampleController {
    async index(req, res) {
        const response = await Sample.find();

        return res.json(response);
    }

    async show(req, res) {
        const response = await Sample.findById(req.params.id);

        return res.json(response);
    }

    async store(req, res) {
        try {
            await SampleValidator(req.body, 'store')
            
            const response = await Sample.create(req.body);
            
            return res.json(response);
        } catch (error) {
            return res.status(400).json({ error: error.message });   
        }
    }

    async update(req, res) {
        try {
            await SampleValidator(req.body, 'update')
            
            const response = await Sample.findByIdAndUpdate(req.params.id, req.body);
            
            return res.json(response);
        } catch (error) {
            return res.status(400).json({ error: error.message });   
        }
    }

    async delete(req, res) {
        await Sample.findByIdAndDelete(req.params.id);

        return res.send(true);
    }
}

<% if (props.sucrase) { -%>
export default new SampleController();
<% } else { -%>
module.exports = new SampleController();
<% } -%>
