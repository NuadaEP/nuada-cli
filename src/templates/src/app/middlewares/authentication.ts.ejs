import { Request, Response, NextFunction } from 'express';
import Jwt from 'jsonwebtoken';

import AppError from '../errors/AppError';
import AuthConfig from '../../config/AuthConfig';

export default class Authentication {
  public async init(request: Request, response: Response, next: NextFunction): Promise<Response> {
    try {
      const { authorization = null } = request.headers;

      if (!authorization) throw new AppError('Missing token', 400);

      const [, token] = authorization.split(' ');
      const decoded_token = await Jwt.verify(token, AuthConfig.secret);

      if (decoded_token.error) throw new AppError('Invalid Token', 401);

      if (!decoded_token.user) throw new AppError('Invalid User', 401);

      request.user = decoded_token.user;

      next();
    } catch (e) {
      throw new AppError('Invalid Token', 401);
    }
  }
}
